# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v20
      with:
        repositories: >
          [
            {
              "id": "atlassian-external",
              "name": "Atlassian External Repository",
              "url": "https://packages.atlassian.com/mvn/maven-external/",
              "releases": {
                "enabled": "true",
                "updatePolicy": "always",
                "checksumPolicy": "fail"
              },
              "snapshots": {
                "enabled": "false",
                "updatePolicy": "always",
                "checksumPolicy": "fail"
              }
            }
          ]
        plugin_repositories: >
          [
            {
              "id": "atlassian-external",
              "name": "Atlassian External Repository",
              "url": "https://packages.atlassian.com/mvn/maven-external/",
              "releases": {
                "enabled": "true",
                "updatePolicy": "always",
                "checksumPolicy": "fail"
              },
              "snapshots": {
                "enabled": "false",
                "updatePolicy": "always",
                "checksumPolicy": "fail"
              }
            }
          ]
        plugin_groups: >
          [
            "com.atlassian.maven.plugins"
          ]
        servers: >
          [
            {
              "id": "github",
              "username": "${env.GITHUB_ACTOR}",
              "password": "${env.GITHUB_TOKEN}"
            }
          ]
        output_file: ${{ github.workspace }}/settings.xml

    - name: Build with Maven
      run: mvn -B package --no-transfer-progress --file pom.xml -s $GITHUB_WORKSPACE/settings.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn -B -DskipTests deploy -Dsha1= -Dchangelist=${{ github.event.release.tag_name }} --no-transfer-progress -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}

